#!/usr/bin/env bash

cat <<EOT
# Ruby stdlib 'json' gem, patched to be Free Software

From 1998 to 2007, the Unicode Consortium maintained a library called
CVTUTF.  In 2009, CVTUTF was removed from unicode.org, and the Unicode
Consortium said that every version of CVTUTF had bugs, and that folks
should use the ICU library instead.

CVTUTF was under a custom license that was not Free under the FSF's
definition, not Open Source under the OSI's definition, and not
GPL-compatible.  The Ruby stdlib [JSON
gem](https://github.com/flori/json) uses code taken-from/based-on
CVTUTF.  This has caused much consternation among folks who care about
any of those 3 things.

We have submitted [a PR](https://github.com/flori/json/pull/567) to
the upstream JSON gem to replace this non-Free code with Free code,
however it is not yet merged.  In the mean-time GNU/Linux distros need
Free versions of the JSON gem so that they can ship Ruby.  This
repository maintains several such versions of the gem, for different
Ruby versions.

# Version chart

| Bundled in             | JSON version                   | Parabola support until        |
|------------------------|--------------------------------|-------------------------------|
| Ruby 1.9.0             | JSON 1.1.2 - 1.1.3             | -                             |
| Ruby 1.9.1             | JSON 1.1.3 - 1.1.4             | -                             |
| Ruby 1.9.2             | JSON 1.4.2                     | -                             |
| Ruby 1.9.3             | JSON 1.5.3-29-gf7f7889 - 1.5.5 | -                             |
| Ruby 2.0               | JSON 1.7.5 - 1.7.7             | -                             |
| Ruby 2.1               | JSON 1.8.1                     | -                             |
| Ruby 2.2               | JSON 1.8.1 - 1.8.1.1           | -                             |
| Ruby 2.3               | JSON 1.8.3 - 1.8.3.1           | -                             |
| Ruby 2.4               | JSON 2.0.2 - 2.0.4             | -                             |
| Ruby 2.5               | JSON 2.1.0                     | -                             |
| Ruby 2.6               | JSON 2.1.0                     | -                             |
| Ruby 2.7               | JSON 2.3.0                     | TBD                           |
| Ruby 3.0               | JSON 2.5.1                     | 2024-08                       |
| Ruby 3.1               | JSON 2.6.1                     | -                             |
| Ruby 3.2               | JSON 2.6.3                     | Whenever Ruby 3.4.0 comes out |
| Ruby 3.3               | JSON 2.7.1                     | -                             |
| Ruby 3.4 (.0.preview1) | JSON 2.7.2                     | TBD                           |
EOT

branch() {
	local branch="${1?}"
	local branch_enc="${branch//'/'/'%2F'}"
	echo "[\`${branch}\`](https://github.com/parabola-gnulinuxlibre/ruby-json/tree/${branch}) ![CI status](https://github.com/parabola-gnulinuxlibre/ruby-json/actions/workflows/ci.yml/badge.svg?branch=${branch_enc})"
}
cat <<EOT

# Branches

| JSON base version | status                    | vanilla LTS branch           | liberated branch               |
|-------------------|---------------------------|------------------------------|--------------------------------|
| JSON 2.3.0        | active<br/>(for Ruby 2.7) | $(branch lts/v2.3.0/vanilla) | $(branch lts/v2.3.0/no-cvtutf) |
| JSON 2.6.3        | active<br/>(for Ruby 3.2) | $(branch lts/v2.6.3/vanilla) | $(branch lts/v2.6.3/no-cvtutf) |
| JSON \`master\`   | active<br/>(for PR)       | -                            | $(branch lukeshu/no-cvtutf)    |
EOT

cat <<EOT

# Releases

| Commit | Ruby (vendored) | JSON (standalone) |
|--------|-----------------|-------------------|
EOT
git tag | xargs -n1 git log -n1 --date=short --format='%cd %H' | sort -u | while read -r date commit; do
	echo -n "| [\`${commit::7}\` (${date})](https://github.com/parabola-gnulinuxlibre/ruby-json/commits/${commit})"

	ruby_tag="$(git describe --tags --exact --match='ruby*' "$commit" 2>/dev/null || true)"
	echo -n ' |'
	if [[ -n "$ruby_tag" ]]; then
		echo -n " Git tag: [\`${ruby_tag}\`](https://github.com/parabola-gnulinuxlibre/ruby-json/releases/tag/${ruby_tag})"
		echo -n '<br/>'
		echo -n " tarball: [\`${ruby_tag}.tar.gz\`](https://repo.parabola.nu/other/ruby-libre/${ruby_tag}.tar.gz)"
	fi

	json_tag="$(git describe --tags --exact --match='v*' "$commit" 2>/dev/null || true)"
	echo -n ' |'
	if [[ -n "$json_tag" ]]; then
		echo -n " Git tag: [\`${json_tag}\`](https://github.com/parabola-gnulinuxlibre/ruby-json/releases/tag/${json_tag})"
		echo -n '<br/>'
		echo -n " tarball: [<small>\`${commit}.tar.gz\`</small>](https://github.com/parabola-gnulinuxlibre/ruby-json/archive/${commit}.tar.gz)"
	fi

	echo ' |'
done
